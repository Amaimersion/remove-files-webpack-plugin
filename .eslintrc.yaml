extends: "eslint:recommended"

env:
  es6: true
  node: true
  commonjs: true

parserOptions:
  ecmaVersion: 9

rules:
  # Possible Errors
  no-await-in-loop: "warn"
  no-dupe-else-if: "error"
  no-import-assign: "error"
  no-template-curly-in-string: "warn"

  # Best Practices
  array-callback-return: "error"
  block-scoped-var: "error"
  complexity:
    - "error"
    - 20
  curly: "error"
  default-param-last: "error"
  dot-notation: "error"
  eqeqeq: "error"
  grouped-accessor-pairs: "error"
  guard-for-in: "error"
  no-caller: "error"
  no-else-return: "error"
  no-empty-function: "error"
  no-eq-null: "warn"
  no-eval: "error"
  no-extend-native: "error"
  no-extra-label: "error"
  no-implicit-coercion: 
    - "error"
    - "allow":
      - "!!"
  no-implicit-globals: "off" # disabled because it is node package.
  no-implied-eval: "error"
  no-invalid-this: "error"
  no-iterator: "error"
  no-labels: "error"
  no-lone-blocks: "error"
  no-loop-func: "error"
  no-magic-numbers: 
    - "error"
    - "ignore":
        - 0 
        - 1
      "ignoreArrayIndexes": true
      "enforceConst": true
  no-multi-spaces: "error"
  no-new: "error"
  no-new-func: "error"
  no-new-wrappers: "error"
  no-octal-escape: "error"
  # no-param-reassign: "error"
  no-proto: "error"
  no-return-assign: "error"
  no-return-await: "error"
  no-script-url: "error"
  no-self-compare: "error"
  no-sequences: "error"
  no-throw-literal: "error"
  no-unmodified-loop-condition: "error"
  no-unused-expressions: "error"
  no-unused-labels: "error"
  no-useless-call: "error"
  no-useless-concat: "error"
  no-useless-return: "error"
  no-void: "error"
  no-warning-comments: "warn"
  no-with: "error"
  prefer-promise-reject-errors: "error"
  radix: 
    - "error"
    - "always"
  require-await: "error"
  wrap-iife: 
    - "error"
    - "outside"

  # Strict
  strict: 
    - "error"
    - "safe"

  # Variables
  no-label-var: "error"
  no-shadow: "error"
  no-unused-vars:
    - "error"
    - "argsIgnorePattern": "^_"
  no-use-before-define: "error"

  # Node.js and CommonJS
  callback-return: "error"
  global-require: "error"
  handle-callback-err: "error"
  no-buffer-constructor: "error"
  no-new-require: "error"
  no-path-concat: "error"
  no-process-exit: "error"
  no-sync: "warn"

  # Stylistic Issues
  array-bracket-newline:
    - "error"
    - "consistent"
  array-bracket-spacing:
    - "error"
    - "never"
  array-element-newline:
    - "error"
    - "consistent"
  block-spacing: 
    - "error"
    - "never"
  brace-style:
    - "error"
    - "1tbs"
  camelcase:
    - "error"
    - "properties": "always"
  comma-dangle:
    - "error"
    - "never"
  comma-spacing:
    - "error"
    - "before": false
      "after": true
  comma-style:
    - "error"
    - "last"
  computed-property-spacing:
    - "error"
    - "never"
  consistent-this:
    - "error"
    - "self"
  eol-last:
    - "error"
    - "always"
  func-call-spacing:
    - "error"
    - "never"
  implicit-arrow-linebreak:
    - "error"
    - "beside"
  indent:
    - "error"
    - 4
    - "SwitchCase": 1
  key-spacing:
    - "error"
    - "beforeColon": false
      "afterColon": true
      "mode": "strict"
  keyword-spacing:
    - "error"
    - "before": true
      "after": true
  lines-around-comment:
    - "error"
    - "beforeBlockComment": true
      "beforeLineComment": true
      "allowBlockStart": true
      "allowObjectStart": true
      "allowArrayStart": true
      "allowClassStart": true
  lines-between-class-members:
    - "error"
    - "always"
  max-depth:
    - "error"
    - 4
  max-statements-per-line:
    - "error"
    - "max": 1
  new-parens:
    - "error"
    - "always"
  newline-per-chained-call: "error"
  no-bitwise: "error"
  no-mixed-operators: "error"
  no-multi-assign: "error"
  no-multiple-empty-lines:
    - "error"
    - "max": 2
  no-negated-condition: "error"
  no-nested-ternary: "error"
  no-new-object: "error"
  no-tabs: "error"
  no-trailing-spaces: "error"
  no-unneeded-ternary: "error"
  no-whitespace-before-property: "error"
  nonblock-statement-body-position:
    - "error"
    - "beside"
  object-curly-spacing:
    - "error"
    - "never"
  object-property-newline: "error"
  operator-assignment:
    - "error"
    - "always"
  operator-linebreak:
    - "error"
    - "after"
  padded-blocks:
    - "error"
    - "never"
  padding-line-between-statements:
    - "error"
    - "blankLine": "always"
      "prev": "*"
      "next": "return"
  prefer-object-spread: "error"
  quote-props:
    - "error"
    - "as-needed"
  quotes:
    - "error"
    - "single"
  semi:
    - "error"
    - "always"
  semi-spacing:
    - "error"
    - "before": false
      "after": true
  semi-style:
    - "error"
    - "last"
  space-before-blocks:
    - "error"
    - "always"
  space-before-function-paren:
    - "error"
    - "never"
  space-in-parens:
    - "error"
    - "never" 
  space-infix-ops: "error"
  space-unary-ops:
    - "error"
    - "words": true
      "nonwords": false
  spaced-comment:
    - "error"
    - "always"
    - "markers":
        - "#region"
        - "#endregion"
  switch-colon-spacing:
    - "error"
    - "after": true
      "before": false
  template-tag-spacing:
    - "error"
    - "always"

  # ECMAScript 6
  arrow-body-style:
    - "error"
    - "as-needed"
  arrow-parens:
    - "error"
    - "always"
  arrow-spacing:
    - "error"
    - "before": true
      "after": true
  generator-star-spacing:
    - "error"
    - "before": false
      "after": true
  no-confusing-arrow:
    - "error"
    - "allowParens": true
  no-duplicate-imports: "error"
  no-useless-computed-key: "error"
  no-useless-constructor: "error"
  no-useless-rename: "error"
  no-var: "error"
  prefer-arrow-callback: "error"
  prefer-const: "error"
  prefer-spread: "error"
  prefer-template: "error"
  template-curly-spacing: 
    - "error"
    - "never"
  yield-star-spacing:
    - "error"
    - "after": true
      "before": false
